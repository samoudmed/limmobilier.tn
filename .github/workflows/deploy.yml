name: Deploy Symfony App (Zero Downtime)

on:
  push:
    branches:
      - test-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Upload build to timestamped release folder
      - name: Upload files via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_PATH }}/releases/${{ github.run_id }}
          dangerous-clean-slate: false   

      # 3. SSH into server and finalize deployment
      - name: SSH finalize deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            APP_PATH=${{ secrets.FTP_PATH }}
            RELEASE_DIR=$APP_PATH/releases/${{ github.run_id }}
            CURRENT_DIR=$APP_PATH/current
            BACKUP_DIR=$APP_PATH/backups

            mkdir -p $BACKUP_DIR

            # --- üõ°Ô∏è 1. Database Backup ---
            TIMESTAMP=$(date +%F-%H-%M-%S)
            mysqldump -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_NAME }} > $BACKUP_DIR/db-$TIMESTAMP.sql || true

            # --- üõ†Ô∏è 2. Install dependencies ---
            cd $RELEASE_DIR
            composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

            # Ensure Symfony cache folder exists
            mkdir -p var/http_cache
            chown -R www-data:www-data var
            chmod -R 775 var

            # Run migrations (safe because we did a backup)
            php bin/console doctrine:migrations:migrate --no-interaction || true

            # Clear & warmup cache
            php bin/console cache:clear --env=prod
            php bin/console cache:warmup --env=prod

            # --- üîó 3. Update symlink atomically ---
            ln -sfn $RELEASE_DIR $CURRENT_DIR

            # Reload services if needed
            sudo systemctl reload php8.2-fpm || true
            sudo systemctl reload nginx || true

            # --- üßπ 4. Cleanup old releases (keep last 3) ---
            cd $APP_PATH/releases
            ls -1tr | head -n -3 | xargs -d '\n' rm -rf --
