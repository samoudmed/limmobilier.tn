name: Deploy Symfony App (Zero Downtime)

on:
  push:
    branches:
      - test-deploy

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Mark repo as safe for Git
      - name: Configure safe directory
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      # 3Ô∏è‚É£ Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, xml, curl
          ini-values: post_max_size=256M, upload_max_filesize=256M
          tools: composer:v2

      # 4Ô∏è‚É£ Check if composer files changed
      - name: Check if composer.json or composer.lock changed
        id: composer
        run: |
          git fetch origin ${{ github.base_ref }}
          if git diff --name-only origin/${{ github.base_ref }} | grep -qE 'composer\.json|composer\.lock'; then
            echo "composer_changed=true" >> $GITHUB_OUTPUT
          else
            echo "composer_changed=false" >> $GITHUB_OUTPUT
          fi

      # 5Ô∏è‚É£ Install Composer dependencies only if needed
      - name: Install Composer dependencies
        if: steps.composer.outputs.composer_changed == 'true'
        run: composer install --no-interaction --optimize-autoloader

      # 6Ô∏è‚É£ Run PHPUnit tests
      - name: Run Unit & Functional Tests
        run: |
          echo "Running PHPUnit tests..."
          ./vendor/bin/phpunit --stop-on-failure

      # 7Ô∏è‚É£ Run Static Analysis (optional)
      - name: Static Analysis
        run: |
          echo "Running PHPStan..."
          ./vendor/bin/phpstan analyse -l max src

      # 8Ô∏è‚É£ Check if database migrations are needed
      - name: Check if migrations are needed
        id: migrations
        run: |
          # Check if Doctrine migrations folder changed
          git fetch origin ${{ github.base_ref }}
          if git diff --name-only origin/${{ github.base_ref }} | grep -qE 'migrations/'; then
            echo "migrations_changed=true" >> $GITHUB_OUTPUT
          else
            echo "migrations_changed=false" >> $GITHUB_OUTPUT
          fi

      # 9Ô∏è‚É£ Run Doctrine migrations only if needed
      - name: Run Doctrine migrations
        if: steps.migrations.outputs.migrations_changed == 'true'
        run: php bin/console doctrine:migrations:migrate --no-interaction

      # üîü Sync files to temporary folder
      - name: Sync files to temporary folder
        run: |
          TMP_DEPLOY=/home/test/deploy_tmp/${GITHUB_RUN_ID}
          mkdir -p $TMP_DEPLOY/public/asset
          rsync -a --delete ./src/ $TMP_DEPLOY/src/
          rsync -a --delete ./templates/ $TMP_DEPLOY/templates/
          rsync -a --delete ./public/asset/ $TMP_DEPLOY/public/asset/
          rsync -a --delete ./vendor/ $TMP_DEPLOY/vendor/

      # 1Ô∏è‚É£1Ô∏è‚É£ Deploy synced files to live project
      - name: Move files to live project
        run: |
          APP_PATH=/home/test/public_html
          TMP_DEPLOY=/home/test/deploy_tmp/${GITHUB_RUN_ID}

          rsync -a --delete $TMP_DEPLOY/src/ $APP_PATH/src/
          rsync -a --delete $TMP_DEPLOY/templates/ $APP_PATH/templates/
          rsync -a --delete $TMP_DEPLOY/public/asset/ $APP_PATH/public/asset/
          rsync -a --delete $TMP_DEPLOY/vendor/ $APP_PATH/vendor/

          # Remove temporary folder
          rm -rf $TMP_DEPLOY

      # 1Ô∏è‚É£2Ô∏è‚É£ Clear and warmup Symfony cache
      - name: Clear Symfony cache
        run: |
          APP_PATH=/home/test/public_html
          cd $APP_PATH
          php bin/console cache:clear --env=dev || true
          php bin/console cache:warmup --env=dev
          echo "‚úÖ Deployment finished"
