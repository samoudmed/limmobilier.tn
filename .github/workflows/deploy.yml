name: Deploy Symfony App (Zero Downtime)

on:
  push:
    branches:
      - test-deploy

jobs:
  deploy:
    runs-on: self-hosted   # Utilise ton runner install√© sur le serveur

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Upload code to server (temp folder)
      - name: Upload files via rsync
        run: |
          TMP_DEPLOY=/home/test/deploy_tmp/${GITHUB_RUN_ID}
          mkdir -p $TMP_DEPLOY
          rsync -a --exclude 'var/*' --exclude 'public/uploads/*' ./ $TMP_DEPLOY/

      # 3Ô∏è‚É£ SSH finalize deployment
      - name: Finalize deployment
        run: |
          set -e  # stop on errors

          APP_PATH=/home/test/public_html
          TMP_DEPLOY=/home/test/deploy_tmp/${GITHUB_RUN_ID}
          BACKUP_DIR=$APP_PATH/backups
          TMP_VENDOR=/tmp/composer_${GITHUB_RUN_ID}

          mkdir -p $BACKUP_DIR
          mkdir -p $TMP_VENDOR

          # --- üõ°Ô∏è 1. Backup DB ---
          TIMESTAMP=$(date +%F-%H-%M-%S)
          mysqldump -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_NAME }} | gzip > $BACKUP_DIR/db-$TIMESTAMP.sql.gz || true
          # Keep last 7 backups
          ls -1tr $BACKUP_DIR/db-*.sql.gz | head -n -7 | xargs -d '\n' rm -f --

          # --- üõ†Ô∏è 2. Composer install in temp folder ---
          cp $TMP_DEPLOY/composer.json $TMP_DEPLOY/composer.lock $TMP_VENDOR/
          cd $TMP_VENDOR
          composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist --no-scripts

          # --- üèóÔ∏è 3. Move vendor and project files ---
          rsync -a --delete $TMP_DEPLOY/ $APP_PATH/
          rsync -a $TMP_VENDOR/vendor/ $APP_PATH/vendor/
          rm -rf $TMP_DEPLOY $TMP_VENDOR

          cd $APP_PATH

          # --- üîß 4. Permissions ---
          mkdir -p var/http_cache
          chown -R www-data:www-data var vendor
          chmod -R 775 var vendor

          # --- ‚ö° 5. Symfony cache ---
          php bin/console cache:clear --env=prod
          php bin/console cache:warmup --env=prod

          # --- üì¶ 6. Migrations ---
          php bin/console doctrine:migrations:migrate --no-interaction || true

          # --- üîÑ 7. Reload services ---
          sudo systemctl reload php8.2-fpm || true
          sudo systemctl reload nginx || true

          echo "‚úÖ Deploy termin√© !"
