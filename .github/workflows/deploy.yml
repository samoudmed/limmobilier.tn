name: Deploy Symfony App (Zero Downtime)

on:
  push:
    branches:
      - test-deploy

jobs:
  deploy:
    runs-on: self-hosted   # Utilise ton runner install√© sur le serveur

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Upload code to temporary folder (exclude cache & uploads)
      - name: Upload files via rsync
        run: |
          TMP_DEPLOY=/home/test/deploy_tmp/${GITHUB_RUN_ID}
          mkdir -p $TMP_DEPLOY
          rsync -a --exclude 'var/cache/*' --exclude 'var/http_cache/*' --exclude 'public/uploads/*' ./ $TMP_DEPLOY/
      
      # 3Ô∏è‚É£ Finalize deployment
      - name: Finalize deployment
        run: |
          set -e
      
          APP_PATH=/home/test/public_html
          TMP_DEPLOY=/home/test/deploy_tmp/${GITHUB_RUN_ID}
          TMP_VENDOR=/tmp/composer_${GITHUB_RUN_ID}
      
          # Check if composer.json or composer.lock changed
          if git diff --name-only HEAD~1 HEAD | grep -E 'composer.json|composer.lock'; then
            echo "üì¶ Composer files changed ‚Äì running composer install"
            rm -rf $TMP_VENDOR
            mkdir -p $TMP_VENDOR
            cp $TMP_DEPLOY/composer.json $TMP_DEPLOY/composer.lock $TMP_VENDOR/
            cd $TMP_VENDOR
            composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist --no-scripts
            COMPOSER_UPDATED=true
          else
            echo "‚úÖ Composer files not changed ‚Äì skip composer install"
            COMPOSER_UPDATED=false
          fi
      
          # Move project files
          rsync -a --exclude 'var/cache/*' --exclude 'var/http_cache/*' --exclude 'public/uploads/*' $TMP_DEPLOY/ $APP_PATH/
          
          # Move vendor only if composer was updated
          if [ "$COMPOSER_UPDATED" = true ]; then
            rsync -a $TMP_VENDOR/vendor/ $APP_PATH/vendor/
            rm -rf $TMP_VENDOR
          fi
      
          rm -rf $TMP_DEPLOY

          cd $APP_PATH

          # --- üîß 4. Permissions ---          
          mkdir -p var/http_cache
          chown -R www-data:www-data var
          chmod -R 775 var vendor

          # --- ‚ö° 5. Symfony cache ---
          php bin/console cache:clear --env=prod || true
          php bin/console cache:warmup --env=prod

          # --- üì¶ 6. Migrations ---
          php bin/console doctrine:migrations:migrate --no-interaction || true

          # --- üîÑ 7. Reload services ---
          sudo systemctl reload php8.2-fpm || true
          sudo systemctl reload nginx || true

          echo "‚úÖ Deploy termin√© !"
