# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    logo_directory: '/home/limmobilier/public_html/public/uploads/logos'
    photo_directory: '/home/limmobilier/public_html/public/uploads/photos'
    article_directory: '/home/limmobilier/public_html/public/uploads/articles'
    app.site_url: 'https://limmobilier.tn'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Twig\AppExtension:
        tags: ['twig.extension']
    
    App\EventListener\LoginSubscriber:
        tags:
            - name: kernel.event_subscriber
              dispatcher: security.event_dispatcher.main 
              
    login_success_handler:
        class:  App\EventListener\CustomAuthenticationSuccess
        arguments:  ["@doctrine.orm.default_entity_manager", "@router"]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }  
            
    App\Service\SitemapUpdater:
        arguments:
            $sitemapFilePath: '%kernel.project_dir%/public/sitemap.xml'
        tags:
            - { name: kernel.event_listener, event: 'annonce.published', method: 'updateSitemap' }        
            
    FOS\ElasticaBundle\Finder\PaginatedFinderInterface $annonceFinder:
        alias: fos_elastica.finder.annonces
        
    App\EventListener\InspectorListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }    
